{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Desktop\\\\rick_and_morty\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Cards from './components/components/Cards/Cards.jsx';\nimport Nav from './components/components/Nav/Nav.jsx';\nimport About from './components/components/About/about.jsx';\nimport Detail from './components/components/Detail/Detail.jsx';\nimport Favorites from './components/components/Favorites/Favorites';\nimport Error404 from './components/components/Error404/error404.jsx';\nimport Form from './components/components/Form/Form.jsx';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false);\n\n  // const email = \"lunisj15@gmail.com\";\n  // const password = \"romeo2013\";\n  // const username = \"lunisj15@gmail.com\";\n  // const password = \"romeo2013\";\n\n  // const login =(userData) =>{\n  //   //console.log(userData)\n  //   if(userData.username === username && userData.password === password) { \n  //     console.log('si son')\n  //     setAccess(true);\n  //     navigate('/home');\n  //   }\n  // };\n\n  function login(userData) {\n    const {\n      username,\n      password\n    } = userData;\n    const URL = 'http://localhost:3001/rickandmorty/login';\n    axios.get(URL + `?username=${username}&password=${password}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      const {\n        access\n      } = data;\n      setAccess(data);\n      access && navigate('/home');\n    });\n  }\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access, navigate]);\n  const logout = () => {\n    if (access === true) {\n      setAccess(false);\n      navigate('/');\n    }\n  };\n  async function onSearch(id) {\n    //console.log(character)\n    //fetch(`http://localhost:3001/rickandmorty/character/${id}`)\n    try {\n      await axios.get(`https://rickandmortyapi.com/api/character/${id}`)\n      // .then((response) => response.json())\n      .then(data => {\n        if (data.name) {\n          characters.find(chart => chart.id === data.id) === undefined ? setCharacters(oldChars => [...oldChars, data]) : alert(\"No se puede mostrar personajes repetidos\");\n        } else {\n          window.alert('No hay personajes con ese ID');\n        }\n      });\n    } catch (error) {}\n  }\n  const onClose = id => {\n    //console.log(character)\n    const filtrado = characters.filter(char => char.id !== id);\n    setCharacters(filtrado);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '25px'\n    },\n    children: [location.pathname !== \"/\" && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch,\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:detailId\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error404, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vjWmJWOav/wTK4ExioA6oX5YkWU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useLocation","useNavigate","Routes","Route","Cards","Nav","About","Detail","Favorites","Error404","Form","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","location","navigate","access","setAccess","login","userData","username","password","URL","get","then","_ref","data","logout","onSearch","id","name","find","chart","undefined","oldChars","alert","window","error","onClose","filtrado","filter","char","className","style","padding","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Pc/Desktop/rick_and_morty/Client/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useLocation, useNavigate} from 'react-router-dom'\nimport { Routes, Route } from 'react-router-dom'\nimport './App.css'\nimport Cards from './components/components/Cards/Cards.jsx'\nimport Nav from './components/components/Nav/Nav.jsx'\nimport About from './components/components/About/about.jsx'\nimport Detail from './components/components/Detail/Detail.jsx'\nimport Favorites from './components/components/Favorites/Favorites'\nimport Error404 from './components/components/Error404/error404.jsx'\nimport Form from './components/components/Form/Form.jsx'\nimport axios from 'axios'\n\n\nfunction App () {\n  const [characters, setCharacters] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [access, setAccess]= useState(false);\n\n  // const email = \"lunisj15@gmail.com\";\n  // const password = \"romeo2013\";\n  // const username = \"lunisj15@gmail.com\";\n  // const password = \"romeo2013\";\n\n  // const login =(userData) =>{\n  //   //console.log(userData)\n  //   if(userData.username === username && userData.password === password) { \n  //     console.log('si son')\n  //     setAccess(true);\n  //     navigate('/home');\n  //   }\n  // };\n\n  function login(userData) {\n    const { username, password } = userData;\n    const URL = 'http://localhost:3001/rickandmorty/login';\n    axios.get(URL + `?username=${username}&password=${password}`).then(({ data }) => {\n        const { access } = data;\n        setAccess(data);\n        access && navigate('/home');\n    });\n  }\n\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access, navigate]);\n\n  const logout =()=>{\n    if(access === true) {\n    setAccess(false)\n    navigate('/')\n    }\n  }\n\n async function onSearch(id) {\n    //console.log(character)\n      //fetch(`http://localhost:3001/rickandmorty/character/${id}`)\n   try {\n     await axios.get(`https://rickandmortyapi.com/api/character/${id}`)\n       // .then((response) => response.json())\n       .then((data) => {\n     \n         if (data.name) {\n           characters.find((chart) => chart.id === data.id) === undefined ?\n             setCharacters((oldChars) => [...oldChars, data]) : alert(\"No se puede mostrar personajes repetidos\");\n         } else {\n           window.alert('No hay personajes con ese ID');\n         }\n       })\n   } catch(error){}\n  }\n  \n  const onClose = (id) => {\n    //console.log(character)\n    const filtrado = characters.filter((char) => char.id !== id)\n    setCharacters(filtrado)\n  };\n  \n  return (\n    <div className='App' style={{ padding: '25px'}}>\n      { location.pathname !== \"/\" &&\n        <Nav onSearch={onSearch} logout={logout}/>}\n      <Routes>\n        <Route path=\"/\" element={<Form login={login} />}/>\n        <Route path=\"/home\" element={<Cards characters={characters} onClose={onClose}/>}/>\n        <Route path=\"/about\" element={<About/>}/>\n        <Route path=\"/detail/:detailId\" element={<Detail/>}/>\n        <Route path=\"/favorites\" element={<Favorites/>}/>\n        <Route path=\"*\" element={<Error404/>} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}